import { useEffect, useState } from "react";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { BookOpen, Sparkles } from "lucide-react";

interface TutorialDialogProps {
  userId: string;
  loginCount: number;
  onNavigateToLearning: () => void;
}

export const TutorialDialog = ({ userId, loginCount, onNavigateToLearning }: TutorialDialogProps) => {
  const [open, setOpen] = useState(false);

  useEffect(() => {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏ –≤—Ç–æ—Ä–æ–º –≤—Ö–æ–¥–µ
    if (loginCount === 1 || loginCount === 2) {
      setOpen(true);
    }
  }, [loginCount]);

  const handleGoToLearning = () => {
    setOpen(false);
    onNavigateToLearning();
  };

  const handleClose = () => {
    setOpen(false);
  };

  return (
    <Dialog open={open} onOpenChange={setOpen}>
      <DialogContent className="sm:max-w-md">
        <DialogHeader>
          <div className="flex items-center justify-center mb-4">
            <div className="relative">
              <div className="absolute inset-0 bg-primary/20 rounded-full blur-xl animate-pulse" />
              <BookOpen className="h-16 w-16 text-primary relative z-10" />
            </div>
          </div>
          <DialogTitle className="text-center text-2xl">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ—Ä–≤–∏—Å! üéâ
          </DialogTitle>
          <DialogDescription className="text-center text-base pt-4">
            –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑—É—á–∏—Ç—å —Ä–∞–∑–¥–µ–ª{" "}
            <span className="font-semibold text-foreground">–û–±—É—á–µ–Ω–∏–µ</span>, –≥–¥–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ
            –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.
          </DialogDescription>
        </DialogHeader>

        <div className="flex flex-col gap-3 mt-6">
          <Button
            onClick={handleGoToLearning}
            className="w-full relative overflow-hidden group border-0 ring-0 outline-none"
            size="lg"
          >
            <span className="relative z-10 flex items-center gap-2">
              <Sparkles className="h-5 w-5 animate-pulse" />
              –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–±—É—á–µ–Ω–∏—é
            </span>
            <div className="absolute inset-0 bg-gradient-to-r from-primary/0 via-primary/20 to-primary/0 translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-1000" />
          </Button>

          <Button
            onClick={handleClose}
            variant="ghost"
            className="w-full hover:bg-muted hover:text-foreground"
          >
            –ù–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ–∑–∂–µ
          </Button>
        </div>

        {loginCount === 1 && (
          <p className="text-xs text-muted-foreground text-center mt-4">
            –≠—Ç–æ –æ–∫–Ω–æ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –µ—â–µ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤—Ö–æ–¥–µ
          </p>
        )}
      </DialogContent>
    </Dialog>
  );
};
